"""Models for the transformation process."""

from enum import StrEnum

from pydantic import BaseModel

from vulsy.common.crypto.sha256 import generate_sha256_hash
from vulsy.common.types.isoutcdatetime import IsoUtcDateTime
from vulsy.common.types.url import HttpUrl


class TransformationError(Exception):
    """Exception raised for errors in the transformation process."""


class TransformationStatus(StrEnum):
    """Represents the status of a transformation.

    Attributes:
        UNPROCESSED: The event has not been processed yet.
        PROCESSED: The event has been processed.
        FAILED: The event has failed to be processed.
        OBSOLETE: The event is obsolete.
        RETRY: The event needs to be retried.
    """

    UNPROCESSED = "unprocessed"
    PROCESSED = "processed"
    FAILED = "failed"
    OBSOLETE = "obsolete"
    RETRY = "retry"


class EndpointEventMetadata(BaseModel):
    """Represents metadata for an endpoint event that has to be or has been transformed.

    Attributes:
        timestamp: The timestamp when this specific event was transformed.
        status: The status of the event.
        event_id: The id of the event.
        original_event_timestamp: The original timestamp of the event.
    """

    timestamp: IsoUtcDateTime
    status: TransformationStatus = TransformationStatus.UNPROCESSED
    event_id: str
    original_event_timestamp: IsoUtcDateTime


class EndpointMetadata(BaseModel):
    """Represents the metadata for a endpoint and its events that need to be or are transformed.

    Attributes:
        timestamp: Last time the metadata has been changed.
        url: The URL of the endpoint.
        events: The events that have been or need to be transformed.
    """

    timestamp: IsoUtcDateTime
    url: HttpUrl
    events: list[EndpointEventMetadata]

    def url_as_hash(self) -> str:
        """Get the URL as a hash."""
        return generate_sha256_hash(self.url)


class TransformationMetadata(BaseModel):
    """Represents the metadata for the transformation.

    Attributes:
        last_queued_timestamp: The timestamp of the last queued event in the ingestion table.
    """

    last_queued_timestamp: IsoUtcDateTime


class EventType(StrEnum):
    """Represents the type of an event."""

    VULNERABILITY = "vulnerability"


class EventAction(StrEnum):
    """Represents the action of an event."""

    ADDED = "added"
    REMOVED = "removed"
