"""NVD source transformation."""

from datetime import date, datetime
from uuid import UUID

from pydantic import AnyUrl, BaseModel, Field


class LangString(BaseModel):
    """Represents a language string."""

    lang: str
    value: str


class Reference(BaseModel):
    """Represents a reference."""

    url: AnyUrl
    source: str | None = None
    tags: list[str] | None = None


class CVSSv2(BaseModel):
    """Represents a CVSSv2."""

    source: str
    type: str
    cvss_data: dict = Field(alias="cvssData")
    base_severity: str | None = Field(default=None, alias="baseSeverity")
    exploitability_score: float | None = Field(default=None, ge=0, le=10, alias="exploitabilityScore")
    impact_score: float | None = Field(default=None, ge=0, le=10, alias="impactScore")
    ac_insuf_info: bool | None = Field(default=None, alias="acInsufInfo")
    obtain_all_privilege: bool | None = Field(default=None, alias="obtainAllPrivilege")
    obtain_user_privilege: bool | None = Field(default=None, alias="obtainUserPrivilege")
    obtain_other_privilege: bool | None = Field(default=None, alias="obtainOtherPrivilege")
    user_interaction_required: bool | None = Field(default=None, alias="userInteractionRequired")


class CVSSv30(CVSSv2):
    """Represents a CVSSv30."""


class CVSSv31(CVSSv2):
    """Represents a CVSSv31."""


class CVSSv40(CVSSv2):
    """Represents a CVSSv40."""


class Metrics(BaseModel):
    """Represents the metrics for a vulnerability."""

    cvss_metric_v40: list[CVSSv40] | None = Field(default=None, alias="cvssMetricV40")
    cvss_metric_v31: list[CVSSv31] | None = Field(default=None, alias="cvssMetricV31")
    cvss_metric_v30: list[CVSSv30] | None = Field(default=None, alias="cvssMetricV30")
    cvss_metric_v2: list[CVSSv2] | None = Field(default=None, alias="cvssMetricV2")


class Weakness(BaseModel):
    """Represents a weakness."""

    source: str
    type: str
    description: list[LangString]


class CPEmatch(BaseModel):
    """Represents a CPE match."""

    vulnerable: bool
    criteria: str
    match_criteria_id: UUID = Field(alias="matchCriteriaId")
    version_start_excluding: str | None = Field(default=None, alias="versionStartExcluding")
    version_start_including: str | None = Field(default=None, alias="versionStartIncluding")
    version_end_excluding: str | None = Field(default=None, alias="versionEndExcluding")
    version_end_including: str | None = Field(default=None, alias="versionEndIncluding")


class Node(BaseModel):
    """Represents a node."""

    operator: str
    negate: bool | None = None
    cpe_match: list[CPEmatch] = Field(alias="cpeMatch")


class Config(BaseModel):
    """Represents a config."""

    operator: str
    negate: bool | None = None
    nodes: list[Node]


class VendorComment(BaseModel):
    """Represents a vendor comment."""

    organization: str
    comment: str
    last_modified: datetime = Field(alias="lastModified")


class CVETag(BaseModel):
    """Represents a CVE tag."""

    source_identifier: str = Field(alias="sourceIdentifier")
    tags: list[str]


class CveItem(BaseModel):
    """Represents a CVE item."""

    id: str
    source_identifier: str = Field(alias="sourceIdentifier")
    vuln_status: str | None = Field(default=None, alias="vulnStatus")
    published: datetime
    last_modified: datetime = Field(alias="lastModified")
    evaluator_comment: str | None = Field(default=None, alias="evaluatorComment")
    evaluator_solution: str | None = Field(default=None, alias="evaluatorSolution")
    evaluator_impact: str | None = Field(default=None, alias="evaluatorImpact")
    cisa_exploit_add: date | None = Field(default=None, alias="cisaExploitAdd")
    cisa_action_due: date | None = Field(default=None, alias="cisaActionDue")
    cisa_required_action: str | None = Field(default=None, alias="cisaRequiredAction")
    cisa_vulnerability_name: str | None = Field(default=None, alias="cisaVulnerabilityName")
    cve_tags: list[CVETag] | None = Field(default=None, alias="cveTags")
    descriptions: list[LangString]
    references: list[Reference]
    metrics: Metrics | None = None
    weaknesses: list[Weakness] | None = None
    configurations: list[Config] | None = None
    vendor_comments: list[VendorComment] | None = Field(default=None, alias="vendorComments")


class DefCveItem(BaseModel):
    """Represents a CVE item."""

    cve: CveItem


class VulnerabilityData(BaseModel):
    """Represents the vulnerability data."""

    results_per_page: int = Field(alias="resultsPerPage", ge=0)
    start_index: int = Field(alias="startIndex", ge=0)
    total_results: int = Field(alias="totalResults", ge=0)
    format: str
    version: str
    timestamp: datetime
    vulnerabilities: list[DefCveItem]

    class Config:
        """Config for the vulnerability data."""

        schema_extra: dict[str, str] = {"$schema": "http://json-schema.org/draft-07/schema#"}  # noqa: RUF012
